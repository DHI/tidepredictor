# Getting started

## Installation

1. Install the tidepredictor package from the distributed wheel file.

```bash
pip install tidepredictor-*.whl
```

2. Copy constituent files (`.nc` files) to the `~/.local/share/tidepredictor` directory.


## Usage

`tidepredictor` can be used either as a command line tool or as a Python library.

### Python library

```{python}
import tidepredictor as tp
from datetime import datetime, timedelta

path = tp.get_default_constituent_path(tp.PredictionType.level)

repo = tp.NetCDFConstituentRepository(path)

predictor = tp.LevelPredictor(repo)

df = predictor.predict(
    lon=-2.75,
    lat=56.1,
    start=datetime(2021, 1, 1),
    end=datetime(2021, 1, 1, 12),
    interval=timedelta(hours=1),
)
df
```

And similar for depth averaged currents.

```{python}

path = tp.get_default_constituent_path(tp.PredictionType.current)

repo = tp.NetCDFConstituentRepository(path)

predictor = tp.CurrentPredictor(repo)

df = predictor.predict_depth_averaged(
    lon=-2.75,
    lat=56.1,
    start=datetime(2021, 1, 1),
    end=datetime(2021, 1, 1, 12),
    interval=timedelta(hours=1)
)
df
```


And current profiles.

```{python}

path = tp.get_default_constituent_path(tp.PredictionType.current)

repo = tp.NetCDFConstituentRepository(path)

predictor = tp.CurrentPredictor(repo)

df = predictor.predict_profile(
    lon=-2.75,
    lat=56.1,
    start=datetime(2021, 1, 1),
    end=datetime(2021, 1, 2, 1),
    interval=timedelta(hours=1),
    levels=[-1.0, -5.0, -15.0]
)
df
```

Line chart.

```{python}
import plotly.express as px

px.line(df, x="time", y="u",color="depth")
```


### Command line

```{python}
!tidepredictor -x 0.0 -y 0.0 -s "2021-01-01" -e "2021-01-01 02:00:00" -i 30
```

All options are available as command line arguments.

```{python}
!tidepredictor --help
```